{"version":3,"sources":["forms.js"],"names":["window","NodeList","prototype","forEach","Array","document","addEventListener","setRequiredFieldBackgroundColor","field","color","getComputedStyle","body","getPropertyValue","value","style","backgroundColor","querySelectorAll","event","target","textarea","setAttribute","scrollHeight","height","HTMLTextAreaElement","counter","maxLength","length","id","counterId","getElementById","createElement","innerHTML","parentNode","insertBefore","nextSibling","myFunction","x","className"],"mappings":"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","file":"unicef.js","sourcesContent":["//Mandatory fields\n\n/**\n * Polyfill. \n * IE and Edge do not support NodeList.forEach\n * This fixes it.\n */ \nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n\n/**\n * Set background color for input, selects and textareas.\n *\n * Requires two color CSS variables to be defined\n * --empty-required-field-background\n * --filled-required-field-background\n *\n * https://developer.mozilla.org/en-US/docs/Web/CSS/var\n *\n * In UNICEF theme colors are defined in variables.scss\n *\n *\n * If the field is empty sets the empty\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  function setRequiredFieldBackgroundColor(field) {\n    //console.log(getComputedStyle(document.body).getPropertyValue('--empty-required-field-background'));\n    color = getComputedStyle(document.body).getPropertyValue('--filled-required-field-background');\n    if (field.value == \"\") {\n      color = getComputedStyle(document.body).getPropertyValue('--empty-required-field-background');\n    }\n    field.style.backgroundColor= color;\n  }\n  document.querySelectorAll('[required]').forEach(field => {\n    //initialize color.\n    setRequiredFieldBackgroundColor(field);\n    //Add event listener\n    field.addEventListener('change', (event) => {\n      //console.log(e)\n      setRequiredFieldBackgroundColor(event.target)\n      //console.log(e.target.style.backgroundColor)\n    });\n  });\n}, false);\n\n/**\n  * Textarea autoresize\n  *\n  * Textareas with data-autoresize attribute defined growth in height when\n  * user enters text.\n  *\n**/\ndocument.querySelectorAll('textarea[data-autoresize]').forEach( textarea => {\n  textarea.setAttribute('style', 'height:' + (textarea.scrollHeight) + 'px;overflow-y:hidden;');\n  textarea.addEventListener(\"input\", (event) => {\n    event.target.style.height = 'auto';\n    event.target.style.height = (event.target.scrollHeight) + 'px';}, false);\n});\n\n/**\n * Textarea counter\n */\nHTMLTextAreaElement.prototype.counter = function() {\n  return this.maxLength - this.value.length;\n}\n\ndocument.querySelectorAll('textarea[data-counter]').forEach( textarea => {\n  if (textarea.id == \"\") {\n    throw \"In order to use data-counter on a textarea you need to set a unique id to the textarea\";\n  }\n  let counterId = textarea.id + \"-counter\";\n  //if counter is not in the HTML => add it to the DOM.\n  if (!document.getElementById(counterId)) {\n    let counter = document.createElement(\"small\")\n    counter.innerHTML = textarea.counter() + \" characters left\";\n    counter.id = counterId;\n    textarea.parentNode.insertBefore(counter, textarea.nextSibling);\n  }\n  textarea.addEventListener(\"input\", (event) => {\n    document.getElementById(counterId).innerHTML = event.target.counter() + \" characters left\";\n  }, false);\n});\n\n/**\n *  Navtabs menu\n */\nfunction myFunction() {\n  var x = document.getElementById(\"myTopnav\");\n  if (x.className === \"topnav\") {\n      x.className += \" responsive\";\n  } else {\n      x.className = \"topnav\";\n  }\n}"]}